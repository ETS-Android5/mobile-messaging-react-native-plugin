def defaultCompileSDKVersion = 28
def defaultBuildToolsVersion = '28.0.3'
def defaultMinSDKVersion = 16
def defaultTargetSDKVersion = 28

def getRootProjectProperty(property, fallback) {
    rootProject.ext.has(property) ? rootProject.ext.get(property) : fallback
}

def overrideAndroidSupportLibsVersion = getRootProjectProperty('overrideAndroidSupportLibsVersion', '')
def overrideGmsVersion = getRootProjectProperty('overrideGmsVersion', '')
def overrideFirebaseVersion = getRootProjectProperty('overrideFirebaseVersion', '')
def overrideKotlinVersion = getRootProjectProperty('overrideKotlinVersion', '')

if (overrideAndroidSupportLibsVersion.empty || overrideAndroidSupportLibsVersion > "26") {
    repositories {
        mavenLocal()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

buildscript {
    // The Android Gradle plugin is only required when opening the android folder stand-alone.
    // This avoids unnecessary downloads and potential conflicts when the library is included as a
    // module dependency in an application project.
    // ref: https://docs.gradle.org/current/userguide/tutorial_using_tasks.html#sec:build_script_external_dependencies
    if (project == rootProject) {
        repositories {
            google()
            jcenter()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:3.4.1'
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion getRootProjectProperty('compileSdkVersion', defaultCompileSDKVersion)
    buildToolsVersion getRootProjectProperty('buildToolsVersion', defaultBuildToolsVersion)
    defaultConfig {
        minSdkVersion getRootProjectProperty('minSdkVersion', defaultMinSDKVersion)
        targetSdkVersion getRootProjectProperty('targetSdkVersion', defaultTargetSDKVersion)
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    // ref: https://www.baeldung.com/maven-local-repository
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    maven {
        // Android JSC is installed from npm
        url "$rootDir/../node_modules/jsc-android/dist"
    }
    google()
    jcenter()
}

dependencies {
    def mmVersion = '3.0.0'

    implementation 'com.facebook.react:react-native:+'
    implementation "androidx.annotation:annotation:1.1.0"

    implementation "org.infobip.mobile.messaging.api:infobip-mobile-messaging-android-resources:$mmVersion@aar"
    implementation "org.infobip.mobile.messaging.api:infobip-mobile-messaging-android-chat-sdk:$mmVersion@aar"
    implementation "org.infobip.mobile.messaging.api:infobip-mobile-messaging-android-geo-sdk:$mmVersion@aar"
    implementation ("org.infobip.mobile.messaging.api:infobip-mobile-messaging-android-sdk:$mmVersion@aar") {
        transitive = true;

        if (!overrideKotlinVersion.empty) {
            exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
        }

        if (!overrideAndroidSupportLibsVersion.empty) {
            exclude group: 'com.android.support', module: 'support-v4'
            exclude group: 'com.android.support', module: 'appcompat-v7'
        }
        if (!overrideGmsVersion.empty) {
            exclude group: 'com.google.android.gms', module: 'play-services-location'
        }
        if (!overrideFirebaseVersion.empty) {
            exclude group: 'com.google.firebase', module: 'firebase-messaging'
        }
    }
    if (!overrideAndroidSupportLibsVersion.empty) {
        implementation "com.android.support:support-v4:$overrideAndroidSupportLibsVersion"
        implementation "com.android.support:appcompat-v7:$overrideAndroidSupportLibsVersion"
    }
    if (!overrideGmsVersion.empty) {
        implementation "com.google.android.gms:play-services-location:$overrideGmsVersion"
    }
    if (!overrideFirebaseVersion.empty) {
        implementation "com.google.firebase:firebase-messaging:$overrideFirebaseVersion"
    }
}
